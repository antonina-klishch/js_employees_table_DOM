{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","title","titleCells","querySelectorAll","addEventListener","e","rows","index","target","cellIndex","sortedColumn","sort","rowA","rowB","cellA","children","textContent","toUpperCase","cellB","length","slice","replace","localeCompare","dataset","order","append","reverse","rowIsAcrive","classList","remove","parentElement","toggle","form","createElement","button","label","qa","className","action","method","innerHTML","map","text","toLocaleUpperCase","join","options","inputs","forEach","input","name","type","after","preventDefault","errorMessagesForm","messageForm","checkErrors","value","push","lastElementChild","cloneNode","i","cell","trim","convertNumberIntoSalary","pushNotification","currentTarget","reset","titleInfo","description","block","titleMessage","message","mainBody","style","top","right","setTimeout","fillCell","previous","current","nameColum","number","cellSalary","salary","arrayThousands","thousands","unshift","Math","floor","nameInput","valueInput","currentCell","closest","previousValue","changedCell","cellInput","innerText","changedRow","indexOf","nameCell","toLocaleLowerCase","focus","maxWidth","ev","key","messageCell"],"mappings":"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","file":"main.e3495b68.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst body = document.querySelector('tbody');\nconst table = document.querySelector('table');\nconst title = document.querySelector('thead');\nconst titleCells = title.querySelectorAll('th');\n\n// #1\n\ntitle.addEventListener('click', (e) => {\n  const rows = body.querySelectorAll('tr');\n  const index = e.target.cellIndex;\n  const sortedColumn = [...rows].sort((rowA, rowB) => {\n    const cellA = rowA.children[index].textContent.toUpperCase();\n    const cellB = rowB.children[index].textContent.toUpperCase();\n\n    if (index === titleCells.length - 1) {\n      const numA = rowA.children[index].textContent.slice(1).replace(',', '');\n      const numB = rowB.children[index].textContent.slice(1).replace(',', '');\n\n      return numA - numB;\n    } else {\n      return cellA.localeCompare(cellB);\n    }\n  });\n\n  if (titleCells[index].dataset.order === 'asc') {\n    titleCells[index].dataset.order = 'desc';\n    body.append(...sortedColumn.reverse());\n  } else {\n    titleCells[index].dataset.order = 'asc';\n    body.append(...sortedColumn);\n  }\n});\n\n// #2\n\nbody.addEventListener('click', (e) => {\n  const rowIsAcrive = body.querySelector('.active');\n\n  if (rowIsAcrive) {\n    rowIsAcrive.classList.remove('active');\n  }\n\n  const elementSelected = e.target;\n\n  elementSelected.parentElement.classList.toggle('active');\n});\n\n// #3\nconst form = document.createElement('form');\nconst button = document.createElement('button');\nconst label = document.createElement('label');\n\nconst qa = ['name', 'position', 'age', 'salary'];\n\nform.className = 'new-employee-form';\nform.action = '#';\nform.method = 'GET';\nbutton.textContent = `Save to table`;\n\nform.innerHTML = `\n  ${qa.map(text => `\n    <label>${text[0].toLocaleUpperCase()\n      + text.slice(1)}:<input name = ${text} data-qa = ${text}\n      required></label>`).join(' ')\n}`;\n\nconst options = [\n  '',\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nlabel.innerHTML = `\nOffice:<select  name='office' required>\n${options.map(text => `<option>${text}</option>`).join(' ')\n}</select>`;\n\nconst inputs = form.querySelectorAll('input');\n\n[...inputs].forEach(input => {\n  if (input.name === 'age' || input.name === 'salary') {\n    input.type = 'number';\n  }\n});\n\ntable.after(form);\nform.children[1].after(label);\nform.append(button);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const errorMessagesForm = [];\n\n  [...inputs].forEach(input => {\n    const messageForm = checkErrors(input.name, input.value);\n\n    if (messageForm.length > 0) {\n      errorMessagesForm.push(messageForm);\n    }\n  });\n\n  if (errorMessagesForm.length === 0) {\n    body.append(body.lastElementChild.cloneNode());\n\n    for (let i = 0; i < titleCells.length; i++) {\n      const cell = document.createElement('td');\n\n      cell.textContent = e.target[i].value.trim();\n\n      if (i === titleCells.length - 1) {\n        convertNumberIntoSalary(e.target[i].value.trim(), cell);\n      }\n\n      body.lastElementChild.append(cell);\n    }\n\n    pushNotification('Success message',\n      `${e.target[0].value} was added to the table`, 'success');\n    e.currentTarget.reset();\n  } else {\n    pushNotification('Error message', errorMessagesForm[0], 'error');\n  }\n});\n\n// #4\n\nconst pushNotification = (titleInfo, description, type) => {\n  const block = document.createElement('div');\n  const titleMessage = document.createElement('h2');\n  const message = document.createElement('p');\n  const mainBody = document.querySelector('body');\n\n  block.classList = `notification ${type}`;\n  block.dataset.qa = `notification`;\n  titleMessage.className = 'title';\n\n  titleMessage.textContent = titleInfo;\n  message.textContent = description;\n\n  mainBody.append(block);\n  block.append(titleMessage);\n  block.append(message);\n\n  block.style.top = `430px`;\n  block.style.right = `5px`;\n\n  setTimeout(() => {\n    block.remove();\n  }, 2000);\n};\n\n// #5\nbody.addEventListener('dblclick', (e) => {\n  const currentCell = e.target.closest('td');\n\n  const previousValue = currentCell.textContent;\n\n  const changedCell = body.querySelector('input');\n\n  if (changedCell) {\n    changedCell.remove();\n  }\n\n  const cellInput = document.createElement('input');\n\n  cellInput.classList = `cell-input`;\n\n  cellInput.innerText = '';\n  currentCell.textContent = cellInput.value;\n\n  currentCell.append(cellInput);\n\n  const changedRow = e.target.parentElement;\n\n  const index = [...changedRow.children].indexOf(currentCell);\n  const nameCell = titleCells[index].textContent.toLocaleLowerCase();\n\n  if (nameCell === 'salary' || nameCell === 'age') {\n    cellInput.type = 'number';\n  }\n\n  cellInput.focus();\n  cellInput.style.maxWidth = '90px';\n\n  cellInput.addEventListener('keydown', (ev) => {\n    if (ev.key === 'Enter') {\n      fillCell(cellInput, previousValue, currentCell, nameCell);\n\n      const messageCell = checkErrors(nameCell, cellInput.value);\n\n      if (messageCell.length !== 0) {\n        pushNotification('Error message', messageCell, 'error');\n        currentCell.textContent = previousValue;\n      }\n    }\n  });\n\n  cellInput.addEventListener('blur', (ev) => {\n    fillCell(cellInput, previousValue, currentCell, nameCell);\n\n    const messageCell = checkErrors(nameCell, cellInput.value);\n\n    if (messageCell.length !== 0) {\n      pushNotification('Error message', messageCell, 'error');\n      currentCell.textContent = previousValue;\n    }\n  });\n}, true);\n\nfunction fillCell(cell, previous, current, nameColum) {\n  if (cell.value.trim() !== '') {\n    current.textContent = cell.value.trim();\n\n    if (nameColum === 'salary') {\n      current.textContent = convertNumberIntoSalary(cell.value.trim(), current);\n    }\n  } else {\n    current.textContent = previous;\n    pushNotification('Error message', 'Input is empty', 'error');\n  }\n};\n\nfunction convertNumberIntoSalary(number, cellSalary) {\n  let salary = number;\n  const arrayThousands = [];\n\n  while (salary > 0) {\n    const thousands = salary % 1000;\n\n    arrayThousands.unshift(thousands);\n\n    salary = Math.floor(salary / 1000);\n  }\n\n  cellSalary.textContent = '$' + arrayThousands.join(',');\n\n  return cellSalary.textContent;\n}\n\nfunction checkErrors(nameInput, valueInput) {\n  let message = '';\n\n  if (nameInput === 'age' && valueInput > 90) {\n    message = 'Value must be less than or equal 90.';\n  }\n\n  if (nameInput === 'age' && valueInput < 18) {\n    message = 'Value must be greater than or equal 18.';\n  } ;\n\n  if (nameInput === 'name' && valueInput.length < 4) {\n    message = 'Please extend the name to 4 characters';\n  }\n\n  return message;\n};\n"]}